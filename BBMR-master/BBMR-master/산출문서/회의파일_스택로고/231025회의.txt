주제 

디지털 소외계층을 위한 기능
ui를 다르게 차별화 
1. 기획관련 논의 
(1) 요식업: 맥도날드	프랜차이즈 식당 
	- 카페: 카페 - 키오스크 
	버스 기차 무인발권기: 
	주차 정산(선택): 
(2) 개선점 
(3) 화면 내에 버튼 3개 노출? 
	 기능 명세서: 필요 지식,	
(4) 와이어프레임 - 피그마로 작성 중
(5) 협업툴 
	Github - 연동 다 완료
	얼굴 인식 처리 프로세스 


2. 기능 논의

- 요식업 기준 - 
반드시 포함되어야 할 기능: 포장/매장 선택, 메뉴 선택 기능(추천 메뉴 배치) - 카페를 기준으로 
	안면 인식(카메라 권한과 탐지에 필요한 딥러닝 선생님 논의)
	포장/매장 선택
	메뉴 선택 기능 ( UI 2~5개 버튼 이내) 
	추천 메뉴 노출 기능(화면 전환에 관계 없이)	
개발하지 않아도 되는 기능: 스크롤. 불필요한 이미지 


1. 서비스 도메인 
선택, 아이템 노출, 
- 큰 UI
- TTS
- 툴팁


얼굴 인식으로 
축적 데이터를 활용한 상품 제공

카페 맘모스 
kotlin 
네트워크 라이브러리 n

얼굴 인식 기능을 40대 
40 대 
50 대
60 대

기존 나

Node 

팀원 분들 
그쵸 
만약에 실제 product 

분명히 들어가는게 맞음
필요한 사람만 누를 수 있게 

옵션이 너무 많음 

주문 수량 정도만 선택할 수 있게 하고
시럽 추가라던지 여러가지 옵션에 대한 건 최대한 빼는 게 좋지 않을까. 

태블릿과 스크린에 둘다 적용 가능하게 한다면

광고 화면의 일부를 광고 - 이미지를 띄워주거나 하는데 
UI를 설계할 때 적절한 곳. (선택)



공통된 옵션 (수량, 차갑게 뜨겁게) 

아메리카노 60대 이상으로 
기준으로 할 거면 덜어내는 부분이 좋다. 

햄버거 집 --> 
카페 요식업 기준으로 잡는게 
카페를 하고 
설계 자체를 카페 맥도날드든 범용성이 높게
옵션을 설계할 수 있게. 

어려울 거 같긴 하다. 상품이 이미지 가격 수량 이름 
옵션이 그거 밖에 없다고 가정하면 커피 
차갑게 뜨겁게 optional하게 들어갈 수도 있고 안들어갈 수도 있고 이미지랑 네이밍이랑 추가할 수 있는데

하나의 코드로 두 개의 앱을 만들 수 있다는 것.
카페 앱에서는 

조건문이 복잡해지거나 하는식(예외 처리)

하나만, 추가할 수 있는 걸 추가하면 좋을 것 같다. 


모델은 카메라에서 보내오는 이미지를  Flask

매장별로 상품이 다르면 그 다르면 등록하고 수정하고 매진되면 매진 될 수 있는 관리자용 웹이 필요하다. 그래서 서버가 필요하다. 생략해도 됨(시간이 남으면 됨)

설계를 할 때, 서버 데이터 기반으로 상품들이 보여질 수 있게끔.
서버를 기반으로 ui에 뿌려주는 형태로, 

클라이언트 앱에서 쓰는 상품 모델의 구성과 
서버에서 내려주는 모델의 구성이 일치해야 하는 부분이 있다. 

api 기반으로 상품을 표시할 수 있는 
- 네트워킹 라이브러리 
라이브러리는 어떤걸 써도 상관없기 때문에
Android에서는 네트워크가 Retrofit2 

http 통신인데 restful한 api규격을 가지고 통신을 하는데
restful한 통신을 쉽게 해줄 수 있는 
볼리 okhttp2 
httpconnection도 가능하긴 함 


멘토님 comment
처음부터 기획하고 디자인 하는 것 보다
카페들 위주로 하는 걸로 
하나를 선택해서 copy하는 식으로(flow만)
기획이나 디자인의 전공이 아니다 보니까 시간 투자는 금물

데이터 축적에 대해서 앱의 행동 데이터를 수집하고 마케팅에 활용하고, 새로운 스펙을 개발할 때도 그 데이터를 기반으로 하는 경우가 많기 때문에 활용하는 

데이터 수집이 있으면 있을 수록 좋다.

선택한 내용 변경하는 기능
60대 이상은 이런 기능 
결제 완료되었을 때 server에 저장해서 (api를 활용해서) 
가짜 api를 만들어서 구현하는게 좋다. (형이 할게 많다)

메뉴
결제 전까지 보여주는 항목도 당연히 있어야 하지만 좋다. 넣는게 좋다
결제 과정, 실제 눌렀
안내 사항만 


클라우드 aws를 쓰는걸로 알고 있음 
구성하는 것만 하더라도 오래 걸림 
클라우드 

서버만 주는 데이터만 받기 때문에 
이건 그냥 아무거나 편한걸로 사용하는게 좋다

server - firebase 

실무에서는 보통 클라우드를 돈 내고 사용해야 함. 

안드로이드 카메라가 켜져있고 opencv를 활용해서 

결제 과정에서 

TTS를 사용해서 음성 추가하는게 


객체 탐지와 이진 분류가 같은 
스터디 하는 경우로 android같은 경우는 java와 kotlin 장단점 단골질문임. 그래서 공부해놓는게 좋음(주제 예시)

서버는 db별 특징. 왜 이 db썼는지, node.js를 쓸지, flask를 사용했는지 등 한 두 번은 나옴.
java보다 kotlin이 좋은 이유가 뭐지? 같은 느낌
python이 왜 머신러닝을 위한 언어로 선호되는지.
openCV는 얼굴인식에 어떻게 활용하는지? 

객체 탐지 - 이진 분류

최종 목표는 어필하는게 진짜 중요함(이런 고민)에 대해서 
포트폴리오에 과정을 적어줘야 함. 
UX적인 고민, 딥러닝에 대해 어떻게 구현할지에 대해 고민
하면서 메모해놓기. 그걸 포트폴리오에 녹여 놓기 
APK에 
자동화 툴을 써서 BUTTON하나만 APK가 빌드 되고, 메신저에 업로드 한다던지, 네이버 클라우드 같은 N드라이브 같은 곳에 올린다던지, 반복적으로 해야하는 수작업들을 자동화 경험이 좋다. 

github 규칙은 어떻게 할지 
branch 관리는 어떻게 할지 

개발위주에 초점을 맞추는게 좋다

중요도라던지 난이도라던지 서버가 높기 때문에, 백이 당연히 
flutter와 android앱은 

대기업은 android가 유리한데, 요즘 시작하는 서비스는 flutter. 뭔가 스타트업에서 시작하고 싶다면 flutter가 유리. 지금 이제 큰 native에서 flutter로 전환하는 케이스가 있다. 
네이버 카페, 지식in, 

java 

개발은 어떻게 접하게 됐는지?
포폴 기술 위주로
mvvm아키텍처가 

어려웠던 것 어떻게 해결했는지? 
gson okhttp같은 라이브러리가 뭔지 설명해봐라. 


일정 수립에 대해서 기능명세서를 작성해보고, 스토리 보드, 와이어 프레임, 개발을 시작하는게 좋음





파트 별로, 
안드로이드같은 경우는 여러명이서 프로젝트 먼저 파고, 깃 먼저 등록 
협업 툴에 대해서 



딥러닝 결론 

개 고양이 이진 분류 처럼 cnn 활용할 것.
1. 이진 분류 모델 과정

1) 해당 30000개의 이미지에서 전처리 과정전에 우리가 40대 이상이 번호를 다 분류해야 함
2) 분류가 가장 중요 그걸 각 폴더에 넣음
old = test 20 training 80
young = test 20 training 80

3) 해당 각 데이터 전처리 - Ex08_개고양이_데이터전처리.ipynb를 활용
	3-1) 배열화 및 사이즈 변경 - 사이즈 변경 시, 저-중화질에서 대형 키오스크에서도 화질 개선 필요없는 수준의 해상도 조정 필요   
 	3-2) 리스트에 누적해서 넣기
	3-3) random_state 후, npz로 압축
4) 해당 모델 cnn으로 학습
5) 모델 저장

2. 얼굴 인식 모델
yoloV4 활용
1) roboflow에서 서양인과 그림 얼굴 인식 데이터 활용 할 건지 or 직접 1000장 이내로 수집해서 라벨링 할 건지 결정
2) 해당 모델 활용해서 openCV에서 작동하는 지 확인
3) 안드로이드(테블릿 환경에서) 잘 작동하는지 확인. 




얼굴 인식
https://universe.roboflow.com/project-iorgd/-1-ltpzf/browse?queryText=&pageSize=50&startingIndex=50&browseQuery=true



1. 폰트가 커지고 글씨가 작아지는 것들 전부 직접 만들어보고 판단하는게 빠를 듯
2. 필수 선택사항도 핫 아이스만? 
3. 버튼식



1. 디지털 소외계층 만
2. 레퍼런스는 이미 정해져있음. 카페  키오스크 맘모스든 프랜차이즈 카페 중심
3. 
4. 어제 얘기 함
5. 
기능 명세서: 내가 오늘 하려고 했음 
스토리 보드 : 이것도 이미 피그마 
와이어 프레임 : 피그마 진행중 